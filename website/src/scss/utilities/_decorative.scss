@use '../config';
@use 'sass:math';

// https://github.com/primer/css/tree/main/src/utilities

// https://tobiasahlin.com/blog/how-to-animate-box-shadow/
// :where(.elevated) { @include config.smooth-shadow(); }
.box-elevated-high {
  box-shadow: 0 5px 2.5px hsl(200 95% 3% / 0.037),
    0 12px 6.5px hsl(200 95% 3% / 0.053),
    0 22.5px 13px hsl(200 95% 3% / 0.065),
    0 40.2px 24px hsl(200 95% 3% / 0.077),
    0 75.2px 44px hsl(200 95% 3% / 0.093),
    0 180px 80px hsl(200 95% 3% / 0.13);
}

:where(.elevated) {
  box-shadow: 0 2.5rem 2rem -2rem hsl(200 50% 20% / 40%);
}

:where(.--outlined) {
  padding: 0;
  overflow: visible;

  &::before {
    position: absolute;
    top: calc(0.5rem * -2);
    left: calc(0.5rem * -2);
    z-index: -1;
    inline-size: 100%;
    block-size: 100%;
    content: '';

    background-image:
      repeating-linear-gradient(
        -24deg,
        transparent,
        transparent 4px,
        var(--accent) 0,
        var(--accent) 5px
      );
    border-radius: 0.5rem;
    box-shadow: var(--accent) 0 0 0 1px inset;
  }
}

// Grainy texture animation by Geoff Graham https://css-tricks.com/snippets/css/animated-grainy-texture/

:where(.grainy) {
  &::before {
    animation: grain 8s steps(10) infinite;
    background-image: url(../images/noise.png);
    background-size: 128px;
    content: '';
    height: 300%;
    left: -50%;
    opacity: 0.6;
    position: fixed;
    top: -100%;
    width: 300%;
  }
}

@keyframes grain {
  0%, 100% { transform:translate(0, 0); }
  10% { transform:translate(-5%, -10%); }
  20% { transform:translate(-15%, 5%); }
  30% { transform:translate(7%, -25%); }
  40% { transform:translate(-5%, 25%); }
  50% { transform:translate(-15%, 10%); }
  60% { transform:translate(15%, 0%); }
  70% { transform:translate(0%, 15%); }
  80% { transform:translate(3%, 35%); }
  90% { transform:translate(-10%, 10%); }
}

:where(.noisy) { filter: url(#riso-noise) }

.distort { filter: url(#distortionFilter) }

.before-noise {
  --svg-noise: url("data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 1920 1920' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E");
  overflow: hidden;

  // &::after,
  &::before {
    position: absolute;
    inset: 0;
    content: '';
    pointer-events: none;
    block-size: 100%;
    inline-size: 100%;
  }

  // &::after { z-index: var(--zi); }
  &::before {
    z-index: -1;
    opacity: var(--a, .25);
    display: none;
    background: var(--svg-noise) 0% 0%/512px repeat;
    background-blend-mode: overlay;

    [data-theme-style=light] & {
      --a: .95;
    }

    [data-theme-style=dark] & {
      --a: .25;
    }

    @include config.respond('tablet') {
      display: block;
    }
  }
}

.svg-filter {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
}

:where(.bg-shadow) {
  &::after {
    position: absolute;
    inset: 0;
    z-index: 1000;
    content: '';
    pointer-events: none;
    inline-size: 100%;
    block-size: 100%;
    transform-origin: 100% 0;
    // background:
    //   var(--bg-image, url(../images/shadow.png))
    //   100% 0/cover no-repeat fixed;
    animation: move 7s 2s infinite alternate;
    mix-blend-mode: overlay;
    opacity: .75s;

    // mask: url(../images/shadow.png);

    [data-theme-style=light] & {
      --bg-image: var(--drawing-light, var(--grad-1));
    }
    [data-theme-style=dark] & {
      --bg-image: var(--drawing-dark, var(--grad-2));
    }
  }
}

@keyframes move {
  to { transform: scaleX(1.1) }
}

.anim-dashed-border {
  --dash-color-light: hsl(var(--blaze-orange));
  --dash-color-dark: hsl(var(--tn-safety-yellow));
  --dash-color: var(--blaze-orange);

  background: linear-gradient(90deg, var(--dash-color) 50%, transparent 50%),
              linear-gradient(90deg, var(--dash-color) 50%, transparent 50%),
              linear-gradient(0deg, var(--dash-color) 50%, transparent 50%),
              linear-gradient(0deg, var(--dash-color) 50%, transparent 50%),
              var(--bg-color, var(--background-a75));
  background-repeat: repeat-x, repeat-x, repeat-y, repeat-y;
  background-size: 16px 4px, 16px 4px, 4px 16px, 4px 16px;
  background-position: 0% 0%, 100% 100%, 0% 100%, 100% 0px;
  animation: dashMove 5s linear infinite;
  // animation-play-state: running;

  backdrop-filter: blur(10px);

  :is([data-theme-style=light]) & {
    --dash-color: var(--dash-color-light);
  }
  :is([data-theme-style=dark]) & {
    --dash-color: var(--dash-color-dark);
  }

  &:where(:is(:not(:hover, :focus))) {
    animation-play-state: paused;
  }
}

@keyframes dashMove {
  to {
    background-position: 100% 0%, 0% 100%, 0% 0%, 100% 100%;
  }
}

.conic-gradient {
  background: conic-gradient(
    var(--color-tr, #FEC701) 0 25%,
    var(--color-br, #E06D15) 0 50%,
    var(--color-bl, #2364A9) 0 75%,
    var(--color-tl, #73BFB7) 0 100%
  );
  position: relative;
}

.backdrop-blur::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backdrop-filter: blur(var(--blur, 10vmin));
  // -webkit-backdrop-filter: blur(var(--blur, 10vmin));
}

.waves {
  position: absolute;
  inline-size: 100%;
  block-size: 15vh;
  margin-block-end: -7px; // Fix for safari gap
  min-block-size: 100px;
  max-block-size: 160px;

  @media (max-width: 768px) {
    & {
      block-size:40px;
      min-block-size:40px;
    }
  }
}

.parallax > use {
  animation: move-forever 25s cubic-bezier(.55,.5,.45,.5) infinite;
  &:nth-child(1) {
    animation-delay: -2s;
    animation-duration: 7s;
  }
  &:nth-child(2) {
    animation-delay: -3s;
    animation-duration: 10s;
  }
  &:nth-child(3) {
    animation-delay: -4s;
    animation-duration: 13s;
  }
  &:nth-child(4) {
    animation-delay: -5s;
    animation-duration: 20s;
  }
}

@keyframes move-forever {
  0% {
    transform: translate3d(-90px,0,0);
  }
  100% {
    transform: translate3d(85px,0,0);
  }
}

// https://ishadeed.com/article/use-cases-css-comparison-functions/#dynamic-line-separator
// :is(.separator, .sep) {â€¦}
.divider {
  &::before {
    position: absolute;
    inset-block-start: 50%;
    inset-inline-start: 50%;
    transform: translate(-50%, -50%);

    inline-size: 1px;
    block-size: 100%;
    background: var(--bg, var(--neutral));
    content: '';
  }
}

// https://css-tricks.com/snippets/css/ribbon/
// https://dev.to/this-is-learning/fully-responsive-css-folded-ribbon-11h5
// https://www.freecodecamp.org/news/make-a-css-only-ribbon/
// https://codepen.io/willpaige/pen/nBKPmw
.ribbon {
  --d: 6px;
  /* folded part */
  --c: blue;
  /* color */
  --f: 16px;
  /* ribbon font-size */

  position: relative;
  display: inline-block;
  // margin: 20px;

  &::before {
    content: attr(data-ribbon);
    position: absolute;
    font-family: sans-serif;
    font-size: var(--f);
    top: 0;
    right: 0;
    transform: translate(29.29%, -100%) rotate(45deg);
    color: #fff;
    text-align: center;
    border: 1px solid transparent;
    border-bottom: 0;
    transform-origin: bottom left;
    padding: 5px 35px calc(var(--d) + 5px);
    background: linear-gradient(hsl(0 0% 0% / 0.5) 0 0) bottom/100% var(--d) no-repeat var(--c);
    background-clip: padding-box;
    clip-path: polygon(0 0,
        100% 0,
        100% 100%,
        calc(100% - var(--d)) calc(100% - var(--d)),
        var(--d) calc(100% - var(--d)),
        0 100%);
    -webkit-mask: linear-gradient(135deg,
        transparent calc(50% - var(--d) * 0.707),
        #fff 0) bottom left,
      linear-gradient(-135deg, transparent calc(50% - var(--d) * 0.707), #fff 0) bottom right;
    -webkit-mask-size: 300vmax 300vmax;
    -webkit-mask-composite: destination-in, xor;
    mask-composite: intersect;
  }

  &--left::before {
    inset-inline: 0 auto;
    transform: translate(-29.29%, -100%) rotate(-45deg);
    transform-origin: bottom right;
  }
}

/* ----------------------------- Backdrop (S)FX ----------------------------- */

// Spotlight mask with smooth edges
.spotlight-mask {
  --maskSize1: 24px;
  --maskSize2: 48px;
  --maskSize3: 64px;
  --spotlight: radial-gradient(circle at var(--x, 50%) var(--y, 50%),
      hsl(0 0% 0%) var(--maskSize1, 0%) 0,
      hsl(0 0% 0% / 0.1) calc(var(--maskSize1, 0%) + 0.1%),
      var(--trn) 0,
      var(--trn) var(--maskSize2, 0%),
      hsl(0 0% 0% / 0.1) calc(var(--maskSize2, 0%) + 0.1%),
      hsl(0 0% 0%) var(--maskSize2, 0%),
      hsl(0 0% 0% / 0.1) calc(var(--maskSize3, 0%) - 0.1%),
      hsl(0 0% 0%) var(--maskSize3, 0%),
      hsl(0 0% 0% / 0.1) calc(var(--maskSize3, 0%) + 0.1%),
      var(--trn) 0);

  mask-image: var(--mask, var(--spotlight));
}

:where([class*='--side-fade']) {
  @include config.side-fade();
}

[data-backdrop='overlay'],
.bg-overlay {
  &::after {
    --overlay-color: var(--background-a60);

    position: absolute;
    inset: 0;
    content: '';
    background-color: var(--overlay, var(--trn));

    :not([data-theme-style]) & {
      --overlay: var(--background-a60);
    }

    [data-theme-style='light'] & {
      --overlay: hsl(var(--black) / .75);
      mix-blend-mode: hard-light;
    }

    [data-theme-style='dark'] & {
      --overlay: var(--background-a75);
      mix-blend-mode: hard-light;
    }
  }
}

[data-backdrop='glassy'] {
  position: relative;
  border-radius: 2ch; // 3ch
  backdrop-filter: blur(40px) brightness(1.2) saturate(2);
  background-image: var(--lin-grad-convex);
  overflow: hidden;

  &::after {
    position: absolute;
    inset: 0;
    // width: 100%; height: 100%;
    z-index: -1;
    content: '';
    // filter: url(#noiseFilter);

    opacity: 0.125;
    filter: brightness(1.25);
    background-color: hsl(var(--cool-gray-1) / .8);
    background-blend-mode: color-burn;
  }

  [data-theme-style='dark'] & {
    --lin-grad-convex: linear-gradient(-45deg,
        var(--c1, hsl(0 0% 0% / 0.22)),
        33.333%,
        var(--c2, hsl(0 0% 0% / 0.25)));
  }
}

[data-backdrop='reflect'] {
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    height: 100%;
    width: 100%;
    background-image: var(--src);
    background-size: cover;
    transform: translate(-50%, -50%) scale(-1) translate(0px, calc((100% + 0.5vmin) * -1));
    filter: blur(4px) brightness(0.75) opacity(0.75);
    overflow: hidden;
  }
}

.clip-geometry {
  @include config.polygonal-clipping();
}

.exclusion {
  wrap-flow: both;
  position: absolute;
  top: 25%;
  left: 25%;
  width: 50%;
  height: 50%;
  shape-outside: circle(50% at 50% 50%);
  border: 1px solid red;
}

:where([class*='--bloom']) {
  position: relative;
  display: inline-block;

  &::before {
    position: absolute;
    inset: 0;
    background: inherit;
    content: attr(data-count);
    filter: blur(var(--bloom, var(--blur-md)));
  }
}

// TODO: Blur-up from LQIP w/ attr(data-*)

// https://css-tricks.com/different-ways-to-get-css-gradient-shadows/
[data-gradient='shadow'] {
  --fallback-gradient: linear-gradient(
    90deg,
    var(--accent), var(--accent-shade)
  );

  &::after,
  &::before {
    content: '';
    position: absolute;
  }

  // gradient as fallback
  // bloom
  &::after {
    z-index: -1;
    inset: 0;
    background: linear-gradient(var(--accent), var(--accent-shade));
    transform: translateY(15%) scale(0.85);
    filter: blur(30px);
  }
  // frame
  // &::before {
  //   inset: -1px;
  //   background-image: linear-gradient(90deg,
  //       var(--accent),
  //       var(--accent-shade));
  // }
}

// https://dev.to/codingdudecom/everything-about-stroke-text-in-css-561i
.text-shadow-stroke {
  @supports not (-webkit-text-stroke: #000) {
    --stroke-color: var(--accent-extra);
    --stroke-width: 1px;

    color: var(--background);
    text-shadow: var(--stroke-width) 0 0 var(--stroke-color),
      calc(var(--stroke-width) * -1) 0 0 var(--stroke-color),
      0 var(--stroke-width) 0 var(--stroke-color),
      0 calc(var(--stroke-width) * -1) 0 var(--stroke-color);
    // text-shadow: 1px 0 0 red, 0 1px 0 red, -1px 0 0 red, 0 -1px 0 red;
  }
}

.stroke {
  stroke-width: var(--stroke, 2px);

  &--thick { --stroke: 8px }

  &-gradient {
    background: var(--lin-grad-4-hues);
    color: transparent;
    -webkit-background-clip: text;
  }
}

.text-gradient {
  // @include config.text-gradient(
  //   135deg,
  //   var(--accent-shade),
  //   var(--accent)
  // );

  color: var(--trn);
  background: var(--bg-layer, var(--lin-grad-4-hues));
  background-clip: text; // border-box
  box-decoration-break: clone;

  /* autoprefixer: ignore next */
  -webkit-text-fill-color: transparent;
}

.anim-text-bg {
  --bg-size: 400%;
  --color-one: hsl(var(--sw-ravishing-coral));
  --color-two: hsl(var(--sw-veri-berri));
  background: linear-gradient(
      90deg,
      var(--color-one),
      var(--color-two),
      var(--color-one)
    )
    0 0 / var(--bg-size) 100%;
  color: transparent;
  background-clip: text;
}

@media (prefers-reduced-motion: no-preference) {
  .anim-text-bg {
    animation: move-bg 8s linear infinite;
  }
  @keyframes move-bg {
    to {
      background-position: var(--bg-size) 0;
    }
  }
}

:where([class*='--stroke'], .paint-stroke) {
  --stroke-width: 2px;
  --stroke-color: var(--accent);

  /* autoprefixer: ignore next */
  -webkit-text-stroke: var(--stroke-width) var(--stroke-color);
}

.border-gradient {
  --offset: 5px;

  &::before {
    position: absolute;
    top: calc(-1 * var(--offset));
    left: calc(-1 * var(--offset));
    z-index: 1;
    width: calc(100% + var(--offset) * 2);
    height: calc(100% + var(--offset) * 2);
    content: '';
    background: linear-gradient(130deg,
        var(--accent),
        var(--accent) 41.07%,
        var(--accent-shade) 76.05%);
    border-radius: 12px;
  }

  &::after {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 2;
    width: 100%;
    height: 100%;
    content: '';
    background: #000;
    border-radius: 8px;
  }

  & > * { z-index: 3; }
}

.mask-border-gradient {
  position: relative;

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: var(--border-gradient-width, 1px);
    border-radius: inherit;
    background-image: var(--border-gradient, var(--lin-grad-2-hues));
    mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
    mask-composite: add, add;
    mask-composite: exclude;
  }
}

.bg-layer {
  // <bg-layer> = <bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>

  // <final-bg-layer> = <'background-color'> || <bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>

  background-image: var(--bg-image, var(--pattern));
  background-position: var(--bg-pos, var(--bg-posx, 50%) var(--bg-posy, 50%));
  background-size: var(--bg-size, 100%);
  background-repeat: no-repeat;
  background-clip: border-box;
  background-origin: padding-box;
  background-attachment: scroll;
  background-image: none;

  &--pattern-1 {
    // https://drafts.csswg.org/css-images-4/#color-stop-syntax
    --color-stop-1: var(--accent);
    --color-stop-2: var(--accent-shade);
    --pattern: repeating-radial-gradient(circle at 60%,
        var(--color-stop-1),
        var(--color-stop-1) 3px,
        var(--trn) 4px,
        var(--color-stop-1) 5px),
      repeating-radial-gradient(circle at 45%,
        var(--color-stop-2),
        var(--color-stop-2) 3px,
        var(--trn) 4px,
        var(--color-stop-2) 5px);
    --bg-size: 200%;
  }

  &--pattern-2 {
    --color-stop-1: var(--accent-a50);
    --color-stop-2: var(--accent-a50);
    --pattern: radial-gradient(var(--color-stop-1) 15%, transparent 16%),
      radial-gradient(var(--color-stop-2) 15%, transparent 16%),
      linear-gradient(45deg,
        var(--trn) 48%,
        var(--color-stop-1) 48%,
        var(--color-stop-1) 52%,
        var(--trn) 52%),
      linear-gradient(-45deg,
        var(--trn) 48%,
        var(--color-stop-2) 48%,
        var(--color-stop-2) 52%,
        var(--trn) 52%);
    --bg-pos: 0 0, 0.625rem 0.625rem, 0 0, 0 0;
    --bg-size: 1.25rem 1.25rem, 1.25rem 1.25rem, 0.625rem 0.625rem,
      0.625rem 0.625rem;
  }

  &--pattern-3 {
    --color-stop: var(--accent-a50);
    // https://drafts.csswg.org/css-images/#repeating-gradients
    --pattern: repeating-radial-gradient(ellipse at right,
        var(--color-stop) 10%,
        var(--color-stop) 1px,
        transparent 1px,
        transparent 3px,
        var(--color-stop) 3px,
        var(--color-stop) 4px,
        transparent 4px,
        transparent 5px,
        var(--color-stop) 5px,
        var(--color-stop) 6px,
        transparent 6px,
        var(--color-stop) 6px,
        var(--color-stop) 7px,
        transparent 7px,
        transparent 8px,
        var(--color-stop) 8px,
        var(--color-stop) 9px,
        transparent 9px,
        transparent 10px);
    --bg-size: 1.25rem 2.5rem;
  }

  &--pattern-4 {
    --color-stop: var(--accent);
    --pattern: repeating-radial-gradient(var(--color-stop),
        var(--color-stop) 2px,
        var(--trn) 2px,
        var(--trn) 4px);
  }
}

// ( Âº0Âº)/ https://codepen.io/t_afif/pen/dyexeK
// .rounded-cut-out {â€¦}

// https://codepen.io/thebabydino/pen/GRwLOKp?editors=0100
.tucked-corners {
  --c: 50px;
  --p: 30px;
  --paper-color: hsl(var(--sw-paperwhite));
  --shadow-color: 47deg 9% 54%;
  --shadow-alpha: 0.34;

  display: inline-block;
  padding: var(--p);
  background:
    radial-gradient(
      farthest-side at 0 0, hsl(var(--black)), var(--trn)
    ) 0 0 / var(--c) var(--c),
    radial-gradient(
      farthest-side at 100% 100%, hsl(var(--black)), var(--trn)
    ) 100% 100% / var(--c) var(--c),
    linear-gradient(
      var(--paper-color) 0 0
    ) 50% 50% / calc(100% - var(--p)) calc(100% - var(--p));
  background-repeat: no-repeat;
  clip-path: polygon(0 var(--c), var(--c) 0, 100% 0, 100% calc(100% - var(--c)), calc(100% - var(--c)) 100%, 0 100%) !important;
  // background-blend-mode: color-burn;
  // Elevation low
  filter:
    drop-shadow(0.3px 0.5px 0.7px hsl(var(--shadow-color) / var(--shadow-alpha)))
    drop-shadow(0.4px 0.8px 1px hsl(var(--shadow-color) / var(--shadow-alpha)))
    drop-shadow(1px 2px 2.5px hsl(var(--shadow-color) / var(--shadow-alpha)));

  overflow: hidden;

  [data-theme-style=dark] & {
    --shadow-color: 270deg 4% 8%;
  }

  @media (max-width: 20em) {
    --c: 40px;
    --p: 20px;
  }
}

:where(.shadow-retro-fx) {
  // https://apple.fandom.com/wiki/List_of_Apple_product_colors#Early_models_(1970s_to_1990s)
  --beige-1: #BFBB98;
  --beige-2: #C4C0AA;
  --bg: #5ebd3e;
  --pad: clamp(1rem, 1vw, 3rem);
  --t: 0.21em;

  margin: 0;
  color: #0095B6; // https://apple.fandom.com/wiki/Bondi_Blue
  // font-weight: 900;
  // font-style: italic;
  // font-size: clamp(3rem, 10vw, 18rem);
  // letter-spacing: 0.04em;
  text-transform: uppercase;
  transform: translate3d(var(--t), var(--t), 0) skew(-10deg);

  & > span {
    --t: 0;
    --delay: calc(var(--char-index) * 50ms);
    display: inline-block;
    text-shadow:
      0 0 var(--bg),
      0 0 #ffb900,
      0 0 #f78200,
      0 0 #e23838,
      0 0 #973999,
      0 0 #009cdf;
    animation: animate 1400ms forwards var(--delay, 0ms) infinite alternate;
    transform: translate3d(var(--t), var(--t), 0);
  }
}

@keyframes animate {
  to {
    --t: -0.21em;
    text-shadow:
    0.05em 0.05em var(--bg),
    0.08em 0.08em #ffb900,
    0.11em 0.11em #f78200,
    0.14em 0.14em #e23838,
    0.17em 0.17em #973999,
    0.21em 0.21em #009cdf;
    transform: translate3d(var(--t), var(--t), 0);
  }
}

.halftone {
  --mask: linear-gradient(rgb(0 0 0), rgb(0 0 0 / 0.5));
  --stop1: 0.06rem;
  --stop2: 0.65rem;
  --invert: 0;
  --dotColor: var(--background);
  --bgColor: var(--foreground);
  --dottedBackground: radial-gradient(circle at center, var(--dotColor) var(--stop1), transparent var(--stop2));

  // aspect-ratio: 1;
  position: relative;
  background: var(--bgColor);
  filter: contrast(50) invert(var(--invert, 0));
  mix-blend-mode: multiply;
  isolation: isolate;
  border: 4px solid var(--borderColor, var(--dotColor));
}

.halftone::after {
  content: '';
  position: absolute;
  inset: 0;
  background-image: var(--dottedBackground);
  background-size: var(--bgSize, 1rem) var(--bgSize, 1rem);
  background-repeat: round;
  background-position: 0 0, var(--bgPosition) var(--bgPosition);
  mask-image: var(--mask);
}

.halftone:nth-child(even) {
  --bgSize: 1.4rem;
  --bgPosition: calc(var(--bgSize) / 2);
  --dottedBackground: radial-gradient(circle at center, var(--dotColor) var(--stop1), transparent var(--stop2)), radial-gradient(circle at center, var(--dotColor) var(--stop1), transparent var(--stop2));
}

.halftone:nth-child(1) {
  --borderColor: white;
  --invert: 1;
  --mask: repeating-linear-gradient(45deg, rgb(0 0 0), rgb(0 0 0 / 0.55) 20%, rgb(0 0 0) 40%);
}
